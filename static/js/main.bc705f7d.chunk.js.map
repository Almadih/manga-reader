{"version":3,"sources":["Components/AppBar/index.js","Components/Home/index.js","Components/Utils/GoBack.js","Components/Manga/index.js","Components/Chapter/index.js","Components/Redux/Actions/types.js","Components/Redux/Reducers/MangaReducer.js","Components/Redux/Reducers/index.js","Components/Redux/Store/index.js","Components/API/index.js","Components/Redux/Actions/index.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["withRouter","props","AppBar","position","color","Toolbar","Typography","variant","Grid","container","justify","item","title","Home","Box","mt","Container","Paper","List","component","this","mangas","map","manga","to","name","ListItem","button","ListItemText","Component","connect","state","md","xs","ml","Button","startIcon","Icon","onClick","history","push","path","className","Manga","lastRead","setLastRead","chapter","localStorage","setItem","setState","getItem","match","params","p","chapters","selected","Divider","find","Chapter","next","prev","setTimeout","chapterIndex","findIndex","id","length","window","scrollTo","pages","page","src","width","alt","disabled","endIcon","types","FETCH_MANGAS","initState","reducers","action","type","payload","composedEnhancer","composeWithDevTools","applyMiddleware","thunk","store","createStore","combineReducers","rootReducer","client","Axios","create","headers","baseURL","fetchMangas","dispatch","a","api","get","res","data","App","useEffect","exact","theme","createMuiTheme","palette","primary","main","secondary","pink","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","URL","process","href","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","ReactDOM","render","basename","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.bc705f7d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Typography,\r\n  Toolbar,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport {withRouter} from 'react-router-dom'\r\nfunction AppBarWrapper(props) {\r\n  return (\r\n    <AppBar position=\"fixed\" color=\"secondary\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\">Manga</Typography>\r\n      <Grid container justify=\"center\">\r\n        <Grid item>\r\n\r\n      <Typography variant=\"h6\">{props.title}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default withRouter(AppBarWrapper)","import {\r\n  Box,\r\n  Container,\r\n\r\n  Paper,\r\n\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport AppBar from \"../AppBar\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Home extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppBar />\r\n        <Box mt={10}>\r\n        <Container>\r\n          <Paper>\r\n            <List component=\"nav\">\r\n              {this.props.mangas.map((manga) => (\r\n                <Link to={`/manga/${manga.name}`} key={manga.name}>\r\n                  <ListItem button>\r\n                    <ListItemText>{manga.name}</ListItemText>\r\n                  </ListItem>\r\n                </Link>\r\n              ))}\r\n            </List>\r\n          </Paper>\r\n        </Container>\r\n        </Box>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  mangas: state.mangas,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React from \"react\";\r\nimport { Grid, Box, Button, Icon, Typography } from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nfunction GoBack(props) {\r\n  return (\r\n    <Grid container justify={props.justify}>\r\n      <Grid item md={8} container xs={12}>\r\n        <Grid item xs={props.xs}>\r\n          <Box ml={0} mt={4}>\r\n            <Button\r\n              startIcon={<Icon>west</Icon>}\r\n              onClick={() =>\r\n     \r\n                   props.history.push(props.path)\r\n\r\n              }\r\n            >\r\n              Go Back\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={4} className=\"text-center\">\r\n          <Box ml={0} mt={4}>\r\n            <Typography variant=\"h5\">{props.title}</Typography>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(GoBack);\r\n","import { Box, Container, Paper,List,ListItem,ListItemText, Divider } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport AppBar from \"../AppBar\";\r\nimport {Link } from 'react-router-dom'\r\nimport GoBack from '../Utils/GoBack'\r\n\r\nclass Manga extends Component {\r\n  state = {\r\n    manga: {},\r\n    lastRead:''\r\n  };\r\n\r\n  componentDidMount() {\r\n      this.setState({lastRead:localStorage.getItem('lastRead')})\r\n  }\r\n\r\n  setLastRead = (chapter)=>{\r\n      localStorage.setItem('lastRead',chapter)\r\n  }\r\n  \r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {\r\n      manga: props.mangas.find(\r\n        (manga) => manga.name === props.match.params.name\r\n      ),\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppBar title={this.props.match.params.name} />\r\n        <Box mt={5}>\r\n\r\n        <Container>\r\n            <GoBack path=\"/\" />\r\n            <Box p={1}>\r\n              <Paper >\r\n              <List component=\"nav\">\r\n              {this.state.manga?.chapters.map((chapter) => (\r\n                <Link to={`/manga/${this.state.manga.name}/chapter/${chapter.name}`} key={chapter.name} onClick={()=>this.setLastRead(chapter.name)}>\r\n                  <ListItem button selected={chapter.name === this.state.lastRead}>\r\n                    <ListItemText>{chapter.name}</ListItemText>\r\n                  </ListItem>\r\n                  <Divider/>\r\n                </Link>\r\n              ))}\r\n            </List>\r\n              </Paper>    </Box>\r\n        </Container>\r\n        </Box>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  mangas: state.mangas,\r\n});\r\nexport default connect(mapStateToProps)(withRouter(Manga));\r\n","import { Box, Button, Container, Grid, Icon, Paper } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport AppBar from \"../AppBar\";\r\nimport GoBack from \"../Utils/GoBack\";\r\nclass Chapter extends Component {\r\n  state = {\r\n    chapter: {},\r\n    manga: {},\r\n    next: \"\",\r\n    prev: \"\",\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {\r\n      ...state,\r\n      chapter: props.mangas\r\n        .find((manga) => manga.name === props.match.params.name)\r\n        ?.chapters.find((chapter) => chapter.name === props.match.params.id),\r\n      manga: props.mangas.find(\r\n        (manga) => manga.name === props.match.params.name\r\n      ),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { manga } = this.state;\r\n    const { id } = this.props.match.params;\r\n\r\n    let chapterIndex = manga?.chapters.findIndex(\r\n      (chapter) => chapter.name === id\r\n    );\r\n    if (chapterIndex + 1 !== manga.chapters.length) {\r\n      this.setState({ next: manga.chapters[chapterIndex + 1].name });\r\n    }\r\n\r\n    if (chapterIndex !== 0) {\r\n      this.setState({ prev: manga.chapters[chapterIndex - 1].name });\r\n    }\r\n  }\r\n\r\n  next = () => {\r\n    const { name } = this.props.match.params;\r\n    this.props.history.push(`/manga/${name}/chapter/${this.state.next}`);\r\n    setTimeout(() => {\r\n      const { manga } = this.state;\r\n      let chapterIndex = manga.chapters.findIndex(\r\n        (chapter) => chapter.name === this.props.match.params.id\r\n      );\r\n      if (chapterIndex + 1 !== manga.chapters.length) {\r\n        this.setState({ next: manga.chapters[chapterIndex + 1].name });\r\n      }\r\n    }, 100);\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  prev = () => {\r\n    const { name } = this.props.match.params;\r\n    this.props.history.push(`/manga/${name}/chapter/${this.state.prev}`);\r\n    setTimeout(() => {\r\n      const { manga } = this.state;\r\n\r\n      let chapterIndex = manga.chapters.findIndex(\r\n        (chapter) => chapter.name === this.props.match.params.id\r\n      );\r\n\r\n      if (chapterIndex !== 0) {\r\n        this.setState({ prev: manga.chapters[chapterIndex - 1].name });\r\n      }\r\n    }, 100);\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppBar\r\n          title={`${this.props.match.params.name} - chapter ${this.props.match.params.id}`}\r\n        />\r\n        <Box mt={5}>\r\n          <Container>\r\n            <GoBack path={`/manga/${this.props.match.params.name}`} />\r\n            {this.state.chapter?.pages.map((page) => (\r\n              <Box p={1}>\r\n                <Paper>\r\n                  <img src={page} width=\"100%\" alt={`${this.props.match.params.name} - chapter ${this.props.match.params.id}`} key={`${this.props.match.params.name} - chapter ${this.props.match.params.id}`} />\r\n                </Paper>\r\n              </Box>\r\n            ))}\r\n            <Box p={1}>\r\n              <Grid container justify=\"space-between\">\r\n                <Grid item xs={4}>\r\n                  <Button\r\n                    disabled={this.state.prev === \"\"}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.prev}\r\n                    startIcon={<Icon>arrow_left</Icon>}\r\n                  >\r\n                    Prev Chapter\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={4} className=\"text-right\">\r\n                  <Button\r\n                    disabled={this.state.next === \"\"}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.next}\r\n                    endIcon={<Icon>arrow_right</Icon>}\r\n                  >\r\n                    Next Chapter\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Container>\r\n        </Box>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  mangas: state.mangas,\r\n});\r\nexport default connect(mapStateToProps)(withRouter(Chapter));\r\n","const types = {\r\nFETCH_MANGAS:\"FETCH_MANGAS\"\r\n}\r\nexport default types","import types from '../Actions/types'\r\n\r\nconst initState = []\r\n\r\nexport default function mangaReducer(state=initState,action){\r\n    switch(action.type){\r\n        case types.FETCH_MANGAS:{\r\n            return action.payload\r\n        }\r\n        default:return state\r\n    }\r\n}","import mangaReducer from \"./MangaReducer\";\r\n\r\nconst reducers = {\r\nmangas:mangaReducer\r\n};\r\nexport default reducers;\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../Reducers\";\r\n\r\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunk));\r\n\r\nconst store = createStore(combineReducers(rootReducer), composedEnhancer);\r\nexport default store;\r\n","import Axios from \"axios\";\r\n\r\nconst client = Axios.create({\r\n  headers: {\r\n    \"content-type\": \"application/json\",\r\n    \"x-access-token\":localStorage.getItem('token')\r\n  },\r\n  baseURL: \"https://192.168.43.111:3001/api\",\r\n});\r\n\r\nexport default client;\r\n","import api from \"../../API\";\r\nimport types from \"./types\";\r\n\r\nexport const fetchMangas = async(dispatch)=>{\r\n  const res = await api.get('/')\r\n  dispatch({type:types.FETCH_MANGAS,payload:res.data})\r\n}\r\n","import { useEffect, Fragment } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./Components/Home\"\nimport Manga from './Components/Manga'\nimport Chapter from './Components/Chapter'\nimport store from \"./Components/Redux/Store\";\nimport { fetchMangas } from \"./Components/Redux/Actions\";\n\nconst loadData = () => {\n  store.dispatch(fetchMangas)\n};\n\nfunction App(props) {\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <Fragment>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/manga/:name\">\n          <Manga/>\n        </Route>\n        <Route exact path=\"/manga/:name/chapter/:id\">\n          <Chapter/>\n        </Route>\n      </Switch>\n    </Fragment>\n  );\n}\nexport default App;\n","import { pink } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#3949ab',\r\n    },\r\n    secondary: pink,\r\n  },\r\n});\r\n\r\nexport default theme;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if ( 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Components/Redux/Store\";\n\n\nserviceWorker.register();\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL} >\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ThemeProvider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}